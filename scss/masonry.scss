/**
  * driveway.css - pure CSS masonry layouts aid.
  By (jhey tompkins)[https://github.com/jh3y/driveway]
  Because the classnames can become rather bloated, from here on, abbreviations are being used in code examples. 
  For example; 
  “masonry-layout” becomes “ml”, 
  “masonry-layout-cluster” becomes “ml-clstr” etc.
*/
.ml {
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	-webkit-column-count: 1;
	-moz-column-count: 1;
	column-count: 1;
	-webkit-column-gap: 0;
	-moz-column-gap: 0;
	column-gap: 0;
	position: relative;
}
.ml--fcs .ml-pnl {
	position: relative;
}
.ml--fcs .ml-pnl:hover {
	z-index: 3;
}
.ml--fcs .ml-pnl:hover ~ .ml__fcs-crtn {
	display: block;
}
.ml__fcs-crtn {
	background-color: #000;
	bottom: 0;
	display: none;
	left: 0;
	opacity: 0.75;
	position: fixed;
	right: 0;
	top: 0;
	z-index: 2;
}
.ml * {
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}
/* As our viewport increases in size, we want to increase the amount of columns in our layout. 
As our viewport decreases in size, in addition the amount of columns decreasing, 
we might want our nested clusters to collapse and allow the segments to take up full width of the layout. */
@media (min-width: 768px) {
	.ml {
		-webkit-column-count: 2;
		-moz-column-count: 2;
		column-count: 2;
	}
}
@media (min-width: 1200px) {
	.ml {
		-webkit-column-count: 3;
		-moz-column-count: 3;
		column-count: 3;
	}
}
.ml-pnl {
	margin: 0;
	padding: 5px;
}
.ml-pnl--fcs {
	position: relative;
}
.ml-pnl--fcs:hover {
	z-index: 3;
}
.ml-pnl--fcs:hover ~ .ml__fcs-crtn {
	display: block;
}
.ml-pnl--pls {
	-webkit-transform-style: preserve-3d;
	transform-style: preserve-3d;
	-webkit-perspective: 1000;
	perspective: 1000;
	-webkit-transition: -webkit-transform 0.25s ease 0s;
	transition: -webkit-transform 0.25s ease 0s;
	transition: transform 0.25s ease 0s;
	transition: transform 0.25s ease 0s, -webkit-transform 0.25s ease 0s;
}
.ml-pnl--pls:hover {
	-webkit-transform: scale(1.02);
	-ms-transform: scale(1.02);
	transform: scale(1.02);
}
@media (min-width: 768px) {
	.ml-pnl {
		-webkit-column-break-inside: avoid;
		page-break-inside: avoid;
		break-inside: avoid;
	}
}
.ml-pnl__cntnt {
	border-radius: 25px;
	overflow: hidden;
	width: 100%;
}
// some labels are pushed down due the the above
.ml-pnl__cntnt-title {
	border-radius: 25px;
	overflow: hidden;
	width: 100%;
	height: 100;
}
.ml-pnl__cntnt--img {
	width: auto;
	max-height: 250px;
	padding: 0;
}
.ml-flp {
	-webkit-perspective: 1000;
	perspective: 1000;
}
.ml-flp:hover .ml-flp__cntnt {
	-webkit-transform: rotateY(180deg);
	transform: rotateY(180deg);
}
.ml-flp--md {
	height: 300px;
}
.ml-flp__pnl {
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
	border-radius: 25px;
	height: 100%;
	left: 0;
	overflow: hidden;
	position: absolute;
	top: 0;
	width: 100%;
}
.ml-flp__pnl--frnt {
	-webkit-transform: rotateY(0deg);
	transform: rotateY(0deg);
	z-index: 2;
}
.ml-flp__pnl--bck {
	-webkit-transform: rotateY(180deg);
	transform: rotateY(180deg);
}
.ml-flp__cntnt {
	height: 100%;
	overflow: visible;
	position: relative;
	-webkit-transform-style: preserve-3d;
	transform-style: preserve-3d;
	-webkit-transition: 0.25s;
	transition: 0.25s;
}
.ml-clstr {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	padding: 0;
}
.ml-clstr--vrt {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
}
/* For nested clusters, we want to ignore things such as horizontal flow and flex-basis at lower viewports. 
We want our clusters to collapse and segments take up full viewport width regardless of whether they are columns, rows, etc.
*/
@media (min-width: 768px) {
	.ml-clstr--vrt {
		-webkit-box-orient: horizontal;
		-webkit-box-direction: normal;
		-webkit-flex-direction: row;
        -ms-flex-direction: row;
		flex-direction: row;
	}
}
.ml-clstr--hrz {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
}
.ml-clstr__sgmnt {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	overflow: hidden;
	-webkit-box-flex: 1;
	-webkit-flex: 1 1 auto;
	-ms-flex: 1 1 auto;
	flex: 1 1 auto;
}
.ml-clstr__sgmnt--rw {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
}
@media (min-width: 768px) {
	.ml-clstr__sgmnt--rw {
		-webkit-box-orient: horizontal;
		-webkit-box-direction: normal;
		-webkit-flex-direction: row;
        -ms-flex-direction: row;
		flex-direction: row;
	}
}
.ml-clstr__sgmnt--clmn {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
}
@media (min-width: 768px) {
	.ml-clstr__sgmnt--hlf {
		-webkit-flex-basis: 50%;
        -ms-flex-preferred-size: 50%;
		flex-basis: 50%;
	}
	.ml-clstr__sgmnt--qrt {
		-webkit-flex-basis: 25%;
        -ms-flex-preferred-size: 25%;
		flex-basis: 25%;
	}
}

/**
  * Color styles
*/
.tx--white {
	color: #fff;
}
.bg--red {
	background-color: #d67465;
}
.bg--green {
	background-color: #9bbb52;
}
.bg--purple {
	background-color: #e1a85a;
}
.bg--blue {
	background-color: #79d4ec;
}
img {
	max-height: 300px;
	background-color: #e1a85a;
}

/* Activities */
.spin {
	cursor: pointer;
	transform-style: preserve-3d;
}
.spin:hover {
    animation: spin 5s linear infinite;
}
@keyframes spin {
	0% {
		transform: rotateY(0deg);
	}
	100% {
		transform: rotateY(360deg);
	}
}